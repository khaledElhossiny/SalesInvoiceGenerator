/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIForms;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import sales.invoice.generator.Classes.Invoice;
import sales.invoice.generator.Classes.InvoiceDetails;

/**
 *
 * @author Khaled
 */
public class SalesInvoiceGeneratorFrame extends javax.swing.JFrame {

    /**
     * Creates new form SalesInvoiceGenerator
     */
    public SalesInvoiceGeneratorFrame() {
        initComponents();
        JFrame f = new JFrame("Sales Invoice Generator");
        f.setSize(1000, 650);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLocationRelativeTo(null); // this method display the JFrame to center position of a screen
        f.setVisible(true);
        MenuBar.add(Menu);
        Menu.add(loadFileMenuItem);
        Menu.add(saveFileMenuItem);
        f.setJMenuBar(MenuBar);
        f.add(invoicePanel);
        f.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoicePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        invoiceNoLbl = new java.awt.Label();
        invoicNoLblValue = new java.awt.Label();
        invoiceDateLbl = new java.awt.Label();
        label4 = new java.awt.Label();
        customerNameLbl = new java.awt.Label();
        invoiceTotalLbl = new java.awt.Label();
        invoiceDateTxtFeild = new java.awt.TextField();
        customerNameTxtFeild = new java.awt.TextField();
        invoiceTotalLblValue = new java.awt.Label();
        legendPanel = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceDetailsTable = new javax.swing.JTable();
        createNewInvoiceBtn = new javax.swing.JButton();
        deleteInvoiceBtn = new javax.swing.JButton();
        saveInvoiceDetails = new javax.swing.JButton();
        cancelInvoiceDetails = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        loadFileMenuItem = new javax.swing.JMenuItem();
        saveFileMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 500));

        invoicePanel.setBackground(new java.awt.Color(204, 204, 204));

        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Date", "Customer", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.getTableHeader().setReorderingAllowed(false);
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(invoiceTable);
        invoiceTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        invoiceNoLbl.setText("Invoice Number");

        invoiceDateLbl.setText("Invoice Date");
        invoiceDateLbl.setVisible(false);

        label4.setText("Invoice Date");

        customerNameLbl.setText("Customer Name");

        invoiceTotalLbl.setText("Invoice Total");

        invoiceDateTxtFeild.setEditable(false);

        customerNameTxtFeild.setEditable(false);

        legendPanel.setBackground(new java.awt.Color(204, 204, 204));

        invoiceDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Item Name", "Item Price", "Count", "Item Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceDetailsTable.setColumnSelectionAllowed(true);
        invoiceDetailsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(invoiceDetailsTable);
        invoiceDetailsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout legendPanelLayout = new javax.swing.GroupLayout(legendPanel);
        legendPanel.setLayout(legendPanelLayout);
        legendPanelLayout.setHorizontalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        legendPanelLayout.setVerticalGroup(
            legendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );

        createNewInvoiceBtn.setText("Creat new invoice");
        createNewInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewInvoiceBtnActionPerformed(evt);
            }
        });

        deleteInvoiceBtn.setText("Delete Invoice");
        deleteInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvoiceBtnActionPerformed(evt);
            }
        });

        saveInvoiceDetails.setText("Save");
        saveInvoiceDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvoiceDetailsActionPerformed(evt);
            }
        });

        cancelInvoiceDetails.setText("Cancel");
        cancelInvoiceDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelInvoiceDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout invoicePanelLayout = new javax.swing.GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoicePanelLayout.createSequentialGroup()
                                .addComponent(invoiceTotalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(invoiceTotalLblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(269, 269, 269))
                            .addComponent(legendPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(invoiceDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(invoiceNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invoiceDateTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoicNoLblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addComponent(customerNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(customerNameTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(createNewInvoiceBtn)
                .addGap(41, 41, 41)
                .addComponent(deleteInvoiceBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveInvoiceDetails)
                .addGap(41, 41, 41)
                .addComponent(cancelInvoiceDetails)
                .addGap(148, 148, 148))
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(invoicNoLblValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoiceNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoicePanelLayout.createSequentialGroup()
                                .addComponent(invoiceDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addComponent(invoiceDateTxtFeild, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerNameTxtFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(invoiceTotalLblValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoiceTotalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(legendPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cancelInvoiceDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(saveInvoiceDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(deleteInvoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(createNewInvoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu.setText("File");

        loadFileMenuItem.setText("Load File");
        loadFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileMenuItemActionPerformed(evt);
            }
        });
        Menu.add(loadFileMenuItem);

        saveFileMenuItem.setText("Save File");
        saveFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileMenuItemActionPerformed(evt);
            }
        });
        Menu.add(saveFileMenuItem);

        MenuBar.add(Menu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void loadFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileMenuItemActionPerformed
        // TODO add your handling code here:
        ArrayList<Invoice> invoices = Invoice.ReadAllInvoicesFromCSV();
        DefaultTableModel invoiceTablemodel = (DefaultTableModel) invoiceTable.getModel();
        for (int invoiceIdx = 0; invoiceIdx < invoices.size(); invoiceIdx++) {
//            model.addRow(new Object[]{"Column 1", "Column 2", "Column 3"});
            invoiceTablemodel.addRow(new Object[]{invoices.get(invoiceIdx).getInvoiceNumber(), invoices.get(invoiceIdx).getInvoiceDate(), invoices.get(invoiceIdx).getInvoiceCustomer(), invoices.get(invoiceIdx).getInvoiceTotal()});
        }
    }//GEN-LAST:event_loadFileMenuItemActionPerformed

    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        invoiceDetailsTablemodel.setRowCount(0);    //remove old selection display
        DefaultTableModel invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        String selectedInvoiceNumber = invoiceTableModel.getValueAt(invoiceTable.getSelectedRow(), 0).toString();
        Invoice myInvoice = Invoice.ReadInvoiceFromCSV(selectedInvoiceNumber);
        invoicNoLblValue.setText(selectedInvoiceNumber);
        invoiceDateTxtFeild.setText(myInvoice.getInvoiceDate());
        customerNameTxtFeild.setText(myInvoice.getInvoiceCustomer());
        invoiceTotalLblValue.setText(String.valueOf(myInvoice.getInvoiceTotal()));
        ArrayList<InvoiceDetails> invoiceDetails = InvoiceDetails.ReadAllInvoiceDetails(selectedInvoiceNumber);
        for (int invoiceDetailsIdx = 0; invoiceDetailsIdx < invoiceDetails.size(); invoiceDetailsIdx++) {
            invoiceDetailsTablemodel.addRow(new Object[]{invoiceDetails.get(invoiceDetailsIdx).getInvoiceNumber(),
                invoiceDetails.get(invoiceDetailsIdx).getItemName(), invoiceDetails.get(invoiceDetailsIdx).getItemPrice(),
                invoiceDetails.get(invoiceDetailsIdx).getItemQuantity(), invoiceDetails.get(invoiceDetailsIdx).getItemTotalPrice()});
        }
    }//GEN-LAST:event_invoiceTableMouseClicked

    private void saveFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileMenuItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel invoiceTablemodel = (DefaultTableModel) invoiceTable.getModel();
        ArrayList<Invoice> invoiceList = new ArrayList<>();
        ArrayList<InvoiceDetails> invoiceDetailsList = new ArrayList<>();
        for (int rowIdx = 0; rowIdx < invoiceTablemodel.getRowCount(); rowIdx++) {
            invoiceList.add(new Invoice(
                    Integer.parseInt(invoiceTablemodel.getValueAt(rowIdx, 0).toString()),
                    invoiceTablemodel.getValueAt(rowIdx, 1).toString(),
                    invoiceTablemodel.getValueAt(rowIdx, 2).toString(),
                    Float.parseFloat(invoiceTablemodel.getValueAt(rowIdx, 3).toString()),
                    InvoiceDetails.ReadAllInvoiceDetails(invoiceTablemodel.getValueAt(rowIdx, 0).toString())));
            invoiceDetailsList.addAll(InvoiceDetails.ReadAllInvoiceDetails(invoiceTablemodel.getValueAt(rowIdx, 0).toString()));
        }
        new Invoice().SaveInvoice(invoiceList);
        new InvoiceDetails().SaveInvoiceDetails(invoiceDetailsList);
    }//GEN-LAST:event_saveFileMenuItemActionPerformed

    private void saveInvoiceDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvoiceDetailsActionPerformed
        // TODO add your handling code here:
        if (invoiceDetailsTable.isEditing())invoiceDetailsTable.getCellEditor().stopCellEditing();
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        ArrayList<InvoiceDetails> invoiceDetails = InvoiceDetails.ReadAllInvoiceDetailsExcept(invoiceDetailsTablemodel.getValueAt(0, 0).toString());
        for (int rowIdx = 0; rowIdx < invoiceDetailsTablemodel.getRowCount(); rowIdx++) {
            invoiceDetails.add(new InvoiceDetails(
                    Integer.parseInt(invoiceDetailsTablemodel.getValueAt(rowIdx, 0).toString()),
                    invoiceDetailsTablemodel.getValueAt(rowIdx, 1).toString(),
                    Float.parseFloat(invoiceDetailsTablemodel.getValueAt(rowIdx, 2).toString()),
                    Integer.parseInt(invoiceDetailsTablemodel.getValueAt(rowIdx, 3).toString()),
                    Float.parseFloat(invoiceDetailsTablemodel.getValueAt(rowIdx, 4).toString())));
        }
        InvoiceDetails myInvoiceDetails = new InvoiceDetails();
        myInvoiceDetails.SaveInvoiceDetails(invoiceDetails);
    }//GEN-LAST:event_saveInvoiceDetailsActionPerformed

    private void cancelInvoiceDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelInvoiceDetailsActionPerformed
        // TODO add your handling code here:
        if (invoiceDetailsTable.isEditing())invoiceDetailsTable.getCellEditor().stopCellEditing();
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        invoiceDetailsTablemodel.setRowCount(0);    //remove old selection display
        DefaultTableModel invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        String selectedInvoiceNumber = invoiceTableModel.getValueAt(invoiceTable.getSelectedRow(), 0).toString();
        Invoice myInvoice = Invoice.ReadInvoiceFromCSV(selectedInvoiceNumber);
        invoicNoLblValue.setText(selectedInvoiceNumber);
        invoiceDateTxtFeild.setText(myInvoice.getInvoiceDate());
        customerNameTxtFeild.setText(myInvoice.getInvoiceCustomer());
        invoiceTotalLblValue.setText(String.valueOf(myInvoice.getInvoiceTotal()));
        ArrayList<InvoiceDetails> invoiceDetails = InvoiceDetails.ReadAllInvoiceDetails(selectedInvoiceNumber);
        for (int invoiceDetailsIdx = 0; invoiceDetailsIdx < invoiceDetails.size(); invoiceDetailsIdx++) {
            invoiceDetailsTablemodel.addRow(new Object[]{invoiceDetails.get(invoiceDetailsIdx).getInvoiceNumber(),
                invoiceDetails.get(invoiceDetailsIdx).getItemName(), invoiceDetails.get(invoiceDetailsIdx).getItemPrice(),
                invoiceDetails.get(invoiceDetailsIdx).getItemQuantity(), invoiceDetails.get(invoiceDetailsIdx).getItemTotalPrice()});
        }
    }//GEN-LAST:event_cancelInvoiceDetailsActionPerformed

    private void createNewInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewInvoiceBtnActionPerformed
        // TODO add your handling code here:
        //do i let the user edit in the invoice data?
        //where to add data for the user to enter in invoiceDetailsTable
        //dont know where to start or upon what criteria do i have to take an action?!!!
        clearTables();
        DefaultTableModel invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        customerNameTxtFeild.setEditable(true);
//        Invoice invoice = new Invoice(String invoiceCustomer, float invoiceTotal, ArrayList<InvoiceDetails> myDetails)
        invoiceDateTxtFeild.setText(new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
        invoiceDetailsTablemodel.addRow(new Object[]{null,null,null,null});
    }//GEN-LAST:event_createNewInvoiceBtnActionPerformed

    private void deleteInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvoiceBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        ArrayList<Invoice> invoices = Invoice.ReadAllInvoicesExcept(String.valueOf(invoiceTable.getSelectedRow()));
        ArrayList<InvoiceDetails> invoiceDetails = InvoiceDetails.ReadAllInvoiceDetailsExcept(invoiceDetailsTablemodel.getValueAt(0, 0).toString());
        invoiceTableModel.removeRow(invoiceTable.getSelectedRow());
        invoiceTableModel.fireTableDataChanged();
        invoiceDetailsTablemodel.getDataVector().removeAllElements();
        invoiceDetailsTablemodel.fireTableDataChanged();
    }//GEN-LAST:event_deleteInvoiceBtnActionPerformed

    private void clearTables(){
        DefaultTableModel invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        DefaultTableModel invoiceDetailsTablemodel = (DefaultTableModel) invoiceDetailsTable.getModel();
        invoiceTableModel.getDataVector().removeAllElements();
        invoiceTableModel.fireTableDataChanged();
        invoiceDetailsTablemodel.getDataVector().removeAllElements();
        invoiceDetailsTablemodel.fireTableDataChanged();
        invoicNoLblValue.setText("");
        customerNameTxtFeild.setText("");
        invoiceDateTxtFeild.setText("");
        invoiceTotalLblValue.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesInvoiceGeneratorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton cancelInvoiceDetails;
    private javax.swing.JButton createNewInvoiceBtn;
    private java.awt.Label customerNameLbl;
    private java.awt.TextField customerNameTxtFeild;
    private javax.swing.JButton deleteInvoiceBtn;
    private java.awt.Label invoicNoLblValue;
    private java.awt.Label invoiceDateLbl;
    private java.awt.TextField invoiceDateTxtFeild;
    private javax.swing.JTable invoiceDetailsTable;
    private java.awt.Label invoiceNoLbl;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JTable invoiceTable;
    private java.awt.Label invoiceTotalLbl;
    private java.awt.Label invoiceTotalLblValue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label4;
    private java.awt.Panel legendPanel;
    private javax.swing.JMenuItem loadFileMenuItem;
    private javax.swing.JMenuItem saveFileMenuItem;
    private javax.swing.JButton saveInvoiceDetails;
    // End of variables declaration//GEN-END:variables
}
